package main;

import java.util.ArrayList;
import java.util.Scanner;
import java.io.Console;

public class main {
public static Console console = System.console();

public static int difficulty() {
    System.out.println("Choose Your Difficulty. Enter the number next to your choice. \n" +
            "1. Easy (6 party members) \n2. Medium (5 party members) \n3. Hard (4 party members)");

    int difficulty = 0;

    Scanner choice = new Scanner(System.in);
    int intchoice = choice.nextInt();
    if (intchoice < 4) {
        difficulty = 7 - intchoice;
    } else {
        difficulty = intchoice;
    }
    choice.close();
    return difficulty;
}



public static void damageMessage(int i, int j, int[] output, Enemy[] gauntlet, Item[] initiative) {
    System.out.println(" hit the " + gauntlet[j].name +
            " with their " + initiative[i].name +
            " for " + output[1] +
            " damage!");
}

public static void special(int i, int j, int[] output, Item[] initiative, Enemy[] gauntlet) {
    if (initiative[i].user == "Wizard") {
        System.out.println(" magic lowers the " + gauntlet[j].name + "'s defenses! They");
        gauntlet[j].ac -= 5;
    }
    if (initiative[i].user == "Priest") {
        System.out.println(" bestows a blessing upon " + initiative[i + 1].user + "! They");
        initiative[i + 1].bonus += 10;
    }
    if (initiative[i].user == "Soldier") {
        System.out
                .println(
                        " communicates a tactical advantage to the party! All future enemies will be surprised! They");
        initiative[0].bonus += 10;
    }
    if ((initiative[i].user == "Dragoon") && (gauntlet[j].name == "Dragon")) {
        System.out.println(" has found his ultimate prize! They");
        initiative[i].special = 8;
    }
    output[1] = (output[1] * initiative[i].special);
    gauntlet[j].hp = gauntlet[j].hp - output[1];
}

public static void combatRound(Item[] initiative, Enemy[] gauntlet, int j) {
    for (int i = 0; i < initiative.length; i++) {
        int[] output = initiative[i].attack();
        System.out.print(initiative[i].user + " rolled a " + output[0] + " and");

        if (output[0] >= (gauntlet[j].ac + 10) || (output[0] == 20)) {
            System.out.print(" Critical Hit! " + initiative[i].user);
            special(i, j, output, initiative, gauntlet);
            damageMessage(i, j, output, gauntlet, initiative);
        } else if (output[0] >= gauntlet[j].ac) {
            gauntlet[j].hp = gauntlet[j].hp - output[1];
            damageMessage(i, j, output, gauntlet, initiative);
        } else {
            System.out.println(" missed!");
        }

        if (gauntlet[j].hp > 0) {
            System.out.println(gauntlet[j].name + " has " +
                    gauntlet[j].hp + " health remaining.");
        } else {
            System.out.println(gauntlet[j].name + " vanquished! \n");
            i = initiative.length;
        }
    }
}

public static void info() {
    String[] profile = { "The Rogue does quadruple damage on a crit. Few can match that!",
            "The Barbarian has the highest bonus to attack roles. Consistent critting!",
            "The Soldier is a tactical expert who boosts the attacks of the frontline hero. So put your best man up front!",
            "The Dragoon is on a quest to slay the awful dragon and no one can strike true against this iron-scaled behemoth!",
            "The Priest blesses the next person in the initiative and enhances their attack rolls.",
            "The Wizard reduces the defenses of his target and makes crits easier for everyone.", "" };
    System.out.println("Take your time to familiarize yourself with each hero." +
            "Type in the number for the hero you'd like to learn about" +
            "1. The Rogue \n" +
            "2. The Barbarian \n" +
            "3. The Soldier \n" +
            "4. The Dragoon \n" +
            "5. The Priest \n" +
            "6. or The Wizard? \n" +
            "7. I am ready to choose my adventuring party!");
    int selected = 0;
    while (selected != 7) {
        Scanner select = new Scanner(System.in);
        selected = select.nextInt();

        System.out.println(profile[selected - 1]);
    }

}

public static void main(String args[]) 
{
    info();
    int difficulty = difficulty();

    Item[] initiative = new Item[difficulty];
    Enemy[] gauntlet = new Enemy[6];

    for (int i = 0; i < difficulty; i++)
    {
    initiative[i] = buildInitiative(difficulty);
    }
    for (int i = 0; i < 6; i++)
    {
    gauntlet[i] = buildGauntlet();
    
    }

    ArrayList<String> survivors = new ArrayList<>();

    for (int j = 0; j < gauntlet.length; j++) {
        System.out.println(gauntlet[j].name + " has appeared!");
        combatRound(initiative, gauntlet, j);

        if (gauntlet[j].hp > 0) {
            System.out.println(gauntlet[j].name + " has escaped into the depths of the dungeon! \n");
            survivors.add(gauntlet[j].name);
        }
        System.out.println("Press \"ENTER\" to continue...");
        Scanner scanner = new Scanner(System.in);
        scanner.nextLine();
    }
    if (survivors.size() == 0) {
        System.out.println("You have vanquished all of the enemies!");
    } else if (survivors.size() == 1) {
        System.out.print("The ");
        for (int i = 0; i < survivors.size() - 1; i++) {
            System.out.print(survivors.get(i) + " and the ");
        }
        System.out.print(survivors.get(survivors.size() - 1) + " awaits your return...");
    } else {
        System.out.print("The ");
        for (int i = 0; i < survivors.size() - 1; i++) {
            System.out.print(survivors.get(i) + " and the ");
        }
        System.out.print(survivors.get(survivors.size() - 1) + " await your return...");
    }
}
}

